
#画直方图
fig, ax = plt.subplots()
plt.bar(['high-precision','moderation-precision','low-precision'],[48,20,32])
x=['high-precision','moderation-precision','low-precision']
y=[48,20,32]
for a, b in zip(x, y):
    ax.text(a, b, b, ha='center', va='bottom')
plt.title('The number of categories in 100 points',fontsize=15)
plt.xlabel('distance: 0-500m,500m-1500m,1500m+')
plt.ylabel('The count of points')


#逆地理编码
import json
from urllib.request import urlopen, quote
import requests,csv
import pandas as pd #导入这些库后边都要用到

def getlnglat(address):
    address="福州市"+address
    url = 'http://api.map.baidu.com/geocoding/v3/'
    output = 'json'
    ak='20YQqR7ex6UQSOaIrXR3jn9HB696mAGC'
    # ak = 'aZR6Z9VgziP0hGcFEK1DXtDWupdOWn9a'

    add = quote(address) #由于本文城市变量为中文，为防止乱码，先用quote进行编码
    uri = url + '?' + 'address=' + add  + '&output=' + output + '&ak=' + ak
    req = urlopen(uri)
    res = req.read().decode() #将其他编码的字符串解码成unicode
    temp = json.loads(res) #对json数据进行解析
    return temp
file = open(r'F:\h\huanghuang5.json','w') #建立json数据文件
with open(r'F:\h\values_count.csv', 'r',encoding='utf-8') as csvfile: #打开csv
    reader = csv.reader(csvfile)
    for line in reader: #读取csv里的数据
        # 忽略第一行
        # if reader.line_num == 1: #由于第一行为变量名称，故忽略掉
        #     continue
            # line是个list，取得所有需要的值
        b= line[0].strip() #将第一列city读取出来并清除不需要字符
        # c= line[1].strip()#将第二列price读取出来并清除不需要字符
        lng = getlnglat(b)['result']['location']['lng'] #采用构造的函数来获取经度
        lat = getlnglat(b)['result']['location']['lat'] #获取纬度
        c= getlnglat(b)['result']['confidence']


        str_temp = '{"lat":' + str(lat) + ',"lng":' + str(lng) + ',"confidence":'+str(c)+',"adress":' + b+'},'
        #print(str_temp) #也可以通过打印出来，把数据copy到百度热力地图api的相应位置上
        d=int(lng)
        e=int(lat)
        if  (d!=119) and (e!=26):
            continue
        file.write(str_temp) #写入文档

file.close() #保存


#计算球面之间的距离，根据经纬度来算
from math import radians, cos, sin, asin, sqrt
 
def haversine(lon1, lat1, lon2, lat2): # 经度1，纬度1，经度2，纬度2 
    """
    Calculate the great circle distance between two points 
    on the earth (specified in decimal degrees)
    """
    # 将十进制度数转化为弧度
    lon1, lat1, lon2, lat2 = map(radians, [lon1, lat1, lon2, lat2])
 
    # haversine公式
    dlon = lon2 - lon1 
    dlat = lat2 - lat1 
    a = sin(dlat/2)**2 + cos(lat1) * cos(lat2) * sin(dlon/2)**2
    c = 2 * asin(sqrt(a)) 
    r = 6371.393 # 地球平均半径，单位为公里
    return c * r * 1000

